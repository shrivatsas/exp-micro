version: "3.8"

services:
  # elixir:
  #   build:
  #     context: ./elixir/hello/
  #     dockerfile: Dockerfile
  #   environment:
  #     "DATABASE_URL": "mysql://elixir:elixirpwd@mysql:3306/hello"
  #     "PORT": 9000
  #     "SECRET_KEY_BASE": "86bZ4yCHNNFeJX5YUS2qCPhVsbet1biuBVkITnDvIUHEaBU4vPbsBj7PGrY2rDwI"
  #   depends_on: 
  #     - mysql
  #   networks: 
  #     - microexp

  express:
    build:
      context: ./expressjs/
      dockerfile: Dockerfile
    networks: 
      - microexp

  # fastapi:
  #   build:
  #     context: ./fastapi/
  #     dockerfile: Dockerfile
  #   networks: 
  #     - microexp

  gin:
    build:
      context: ./gin/
      dockerfile: Dockerfile
    labels:
      - "traefik.http.routers.gin.rule=Host(`gin.docker.localhost`)"
    networks: 
      - microexp

  # luminous:
  #   build:
  #     context: ./luminous-clj/
  #     dockerfile: Dockerfile
  #   environment:
  #     "database-url": "jdbc:h2:./luminous_clj_dev.db"
  #   networks: 
  #     - microexp

  # helidon-se:
  #   build:
  #     context: ./helidon-se/
  #     dockerfile: Dockerfile
  #   networks: 
  #     - microexp

  # micronaut:
  #   build:
  #     context: ./micronaut/
  #     dockerfile: Dockerfile
  #   networks: 
  #     - microexp

  # quarkus:
  #   build:
  #     context: ./quarkus/
  #     dockerfile: src/main/docker/Dockerfile.jvm
  #   networks: 
  #     - microexp

  # zipkin:
  #   image: openzipkin/zipkin:latest
  #   ports:
  #     - "9411:9411"
  #   networks: 
  #     - microexp

  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   ports:
  #     - "5775:5775/udp" 
  #     - "6831:6831/udp"
  #     - "6832:6832/udp"
  #     - "5778:5778"
  #     - "16686:16686"
  #     - "14268:14268"
  #   networks: 
  #     - microexp

  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   command:
  #     - --config.file=/etc/prometheus/prometheus.yml
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #   networks: 
  #     - microexp

  # ambassador:
  #   image: docker.io/datawire/aes:1.9.1
  #   command:
  #     - --demo
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - microexp

  # mysql:
  #   image: mysql:8
  #   environment:
  #     MYSQL_ROOT_PASSWORD: rootpwd
  #     MYSQL_USER: elixir
  #     MYSQL_PASSWORD: elixirpwd
  #     MYSQL_DATABASE: hello
  #   volumes: 
  #     - mysqlvol:/var/lib/mysql
  #   networks: 
  #     - microexp

  # traefik-proxy:
  #     # The official v2.0 Traefik docker image
  #     image: traefik:v2.4
  #     # Enables the web UI and tells Traefik to listen to docker
  #     command: --api.insecure=true --providers.docker
  #     ports:
  #       # The HTTP port
  #       - "80:80"
  #       # The Web UI (enabled by --api.insecure=true)
  #       - "8080:8080"
  #     volumes:
  #       # So that Traefik can listen to the Docker events
  #       - /var/run/docker.sock:/var/run/docker.sock
  #     networks: 
  #       - microexp

networks:
  microexp:
    name: microexp
    external: true

# volumes:
#   mysqlvol:
#     name: mysql01