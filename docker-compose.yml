version: "3.8"

services:
  consul-agent-1:
    image: consul:latest
    command: "agent -retry-join consul-server-bootstrap -client 0.0.0.0"
    networks:
      microexp:
        ipv4_address: "172.22.0.21"

  consul-agent-2:
    image: consul:latest
    command: "agent -retry-join consul-server-bootstrap -client 0.0.0.0"
    networks:
      microexp:
        ipv4_address: "172.22.0.22"

  consul-agent-3:
    image: consul:latest
    command: "agent -retry-join consul-server-bootstrap -client 0.0.0.0"
    networks:
      microexp:
        ipv4_address: "172.22.0.23"

  # elixir:
  #   build:
  #     context: ./elixir/hello/
  #     dockerfile: Dockerfile
  #   environment:
  #     "DATABASE_URL": "mysql://elixir:elixirpwd@mysql:3306/hello"
  #     "PORT": 9000
  #     "SECRET_KEY_BASE": "86bZ4yCHNNFeJX5YUS2qCPhVsbet1biuBVkITnDvIUHEaBU4vPbsBj7PGrY2rDwI"
  #   depends_on: 
  #     - mysql
  #   networks: 
  #     - microexp

  express:
    build:
      context: ./expressjs/
      dockerfile: Dockerfile
    networks: 
      - microexp

  fastapi:
    build:
      context: ./fastapi/
      dockerfile: Dockerfile
    networks: 
      - microexp

  gin:
    build:
      context: ./go/
      dockerfile: Dockerfile
    networks: 
      - microexp

  # luminous:
  #   build:
  #     context: ./luminous-clj/
  #     dockerfile: Dockerfile
  #   environment:
  #     "database-url": "jdbc:h2:./luminous_clj_dev.db"
  #   networks: 
  #     - microexp

  # helidon-se:
  #   build:
  #     context: ./helidon-se/
  #     dockerfile: Dockerfile
  #   networks: 
  #     - microexp

  # micronaut:
  #   build:
  #     context: ./micronaut/
  #     dockerfile: Dockerfile
  #   networks: 
  #     - microexp

  # quarkus:
  #   build:
  #     context: ./quarkus/
  #     dockerfile: src/main/docker/Dockerfile.jvm
  #   networks: 
  #     - microexp

  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    networks: 
      - microexp

  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   ports:
  #     - "5775:5775/udp" 
  #     - "6831:6831/udp"
  #     - "6832:6832/udp"
  #     - "5778:5778"
  #     - "16686:16686"
  #     - "14268:14268"
  #   networks: 
  #     - microexp

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks: 
      - microexp

  consul-server-1:
    image: consul:latest
    command: "agent -server -retry-join consul-server-bootstrap -client 0.0.0.0"
    networks:
      microexp:

  consul-server-2:
    image: consul:latest
    command: "agent -server -retry-join consul-server-bootstrap -client 0.0.0.0"
    networks:
      microexp:

  consul-server-bootstrap:
    image: consul:latest
    networks:
      microexp:
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"
    command: "agent -server -bootstrap-expect 3 -ui -client 0.0.0.0"

  # ambassador:
  #   image: docker.io/datawire/aes:1.9.1
  #   command:
  #     - --demo
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - microexp

  nats:
    image: nats:latest
    ports:
      - "4222:4222"
    networks: 
      - microexp

  # mysql:
  #   image: mysql:8
  #   environment:
  #     MYSQL_ROOT_PASSWORD: rootpwd
  #     MYSQL_USER: elixir
  #     MYSQL_PASSWORD: elixirpwd
  #     MYSQL_DATABASE: hello
  #   volumes: 
  #     - mysqlvol:/var/lib/mysql
  #   networks: 
  #     - microexp

networks:
  microexp:
    name: microexp
    ipam:
      driver: default
      config: 
        - subnet: "172.22.0.0/32"

# volumes:
#   mysqlvol:
#     name: mysql01